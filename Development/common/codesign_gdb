#!/usr/bin/env bash

set -e

if [ -z "$(security find-certificate -c gdb-cert | grep System.keychain)" ]; then
  echo "Unable to find gdb-cert in system keychain. Create it."
  echo "See https://sourceware.org/gdb/wiki/PermissionsDarwin"
  exit 1
fi

if [ -z "$(security dump-trust-settings -d | grep gdb-cert)" ]; then
  echo "Unable to confirm gdb-cert is trusted. Trust it."
  echo "See https://sourceware.org/gdb/wiki/PermissionsDarwin"
  exit 1
fi

GDB=$(python -c "import os; print( os.path.realpath( '$(which gdb)' ) )" )
echo "OK to sign ${GDB} ? (ctrl-c to quit)"
read ignored

cat > gdb-entitlement.xml <<"EOF"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>com.apple.security.cs.debugger</key>
    <true/>
</dict>
</plist>
EOF

echo "OK, sighing ${GDB}. You will be asked for an admin user/password."
codesign --entitlements gdb-entitlement.xml -fs gdb-cert "$GDB"

echo "OK, Double check signing:"
codesign -vv "$GDB"
codesign -d --entitlements :- "$GDB"

